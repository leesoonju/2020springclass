//덧셈 & 곱셈
#include <stdio.h>
#include <string.h>
#include <stdlib.h> 

int main(void){
   char op; 
   char a[101];
   char b[101];
   
   scanf("%c", &op);
   scanf("%s", a);
   scanf("%s", b);
   
   
   int alen = strlen(a);
   int blen = strlen(b);
   
   //////곱셈
   if (op == 42){
      alen--;
      blen--;
      int x = 0, y = 0;
      int result[202] = {0};
      
      for (int i = 0; i<=blen; i++){
         y = b[blen-i]-'0';
         for (int j = 0; j<=alen; j++){         
            x = a[alen-j]-'0';
            result[i+j] +=  (x*y)%10;
            if (result[i+j] >= 10){
                     result[i+j+1]+=result[i+j]/10;
               result[i+j] %= 10;
            }  
            result[i+j+1] += x*y/10;            
         }
      }
      int i=1;
      while (result[202-i]==0){
            i++;
            if(i==203){
               printf("0");
               return 0;
            }
         }
      
      for (; i<=202; i++)
         printf("%d", result[202-i]);
   }
   
   //////덧셈
   else if (op == 43){      
      char result[202];
      alen--, blen--;
      int carry = 0;
      int x = 0, y = 0, i = 0;
      while (1){
         if (alen <= -1 && blen <= -1){
            if (carry == 1)
               result[i] = carry+48;
            break;
         }
         else if (alen <= -1 && blen > -1){
            x = 0;
            y = b[blen]-'0';
         }
         else if (alen > -1 && blen <= -1){
            x = a[alen]-'0';
            y = 0;
         }
         else{            
            x = a[alen]-'0';
            y = b[blen]-'0';
         }
         
         if (x + y + carry < 10){
            result[i] = x + y + carry +48;
            carry = 0;
            i++, alen--, blen--;
         }
         else if (x + y + carry >= 10){
            result[i] = x + y + carry - 10 + 48;
            carry = 1;
            i++, alen--, blen--;
         }
      }
      
      int relen = strlen(result) - 1;
		 	
      for (; relen>=0; relen--)
      	if(0<=(result[relen]-'0')&&9>=(result[relen]-'0')) printf("%c", result[relen]);      
		 
      
   } 
   return 0;
}
