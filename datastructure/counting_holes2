#include <stdio.h>
#include <stdlib.h>

void checkhole(int i, int j,int row, int column, int** arr,int** f) {
   arr[i][j] = 1;
   f[i][j]=1;
   if (j + 1 < column && arr[i][j + 1] != 1 && f[i][j + 1] == 0)checkhole(i, j + 1,row,column,arr,f);
   if (j - 1 >= 0 && arr[i][j - 1] != 1 && f[i][j - 1] == 0)checkhole(i, j - 1, row, column, arr, f);
   if (i + 1 < row && arr[i + 1][j] != 1 && f[i + 1][j] == 0)checkhole(i + 1, j, row, column, arr, f);
   if (i - 1 >= 0 && arr[i - 1][j] != 1 && f[i - 1][j] == 0)checkhole(i - 1, j, row, column, arr, f);
}

int main() {
   int row, column;
   scanf("%d %d", &row, &column);
   int** wall;

   wall = malloc(sizeof(int*) * row);
   wall[0] = (int*)malloc(sizeof(int) * column*row);
   for (int i = 1;i < row;i++) {
      wall[i] = wall[i - 1] + column;
   }

   int input;
   for (int i = 0;i<row*column;i++){
      scanf("%d", &input);
      *(wall[0] + i) = input;
   }
   //벽 만들기

   int** f = malloc(sizeof(int*) * row);
   f[0] = (int*)malloc(sizeof(int) * column * row);
   for (int i = 1;i < row;i++) {
      f[i] = f[i - 1] + column;
   }

   for (int i = 0;i < row * column;i++)* (f[0] + i) = 0;
   //이동한 자취 표현
   
   int count = 0;
   
   for (int i = 0;i < row-1;i++) {
      for (int j = 0;j < column-1;j++) {
         if (wall[i][j] == 0 && wall[i + 1][j] == 0 && wall[i][j + 1] == 0 && wall[i + 1][j + 1] == 0) {
            count++;
            checkhole(i, j, row, column, wall, f);
         }
      }
   }
   printf("%d", count);
}
